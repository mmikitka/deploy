---
- block:
    - name: Remove Vim
      become: yes
      apt:
        name:
          - vim-nox
          - vim-runtime
        state: absent

    - name: Install NeoVim as an AppImage
      become: yes
      get_url:
        url: https://github.com/neovim/neovim/releases/download/v0.4.4/nvim.appimage
        dest: /usr/bin/nvim
        owner: root
        group: root
        mode: 0755
        checksum: sha256:1eea3d44f55bab0856d08737c0c50ead7645ae3afd6352a252bc403b9843ec95

    # Installed Node.js latest stable version via binary archive
    # https://github.com/nodejs/help/wiki/Installation#how-to-install-nodejs-via-binary-archive-on-linux
    # mkdir -p ~/.node_modules
    # npm config set prefix '~/.node_modules'
    # PATH="~/.node_modules/bin:$PATH" in ~/.bashrc
    - name: Install supporting packages
      become: yes
      apt:
        name:
          - ansible-lint
          - fonts-powerline
          - npm
          - pylint3
          - python3-autopep8
        state: latest
  when: ansible_distribution == 'Debian'

- block:
    - name: Remove Vim
      become: yes
      pacman:
        name: vim
        state: absent

    - name: Install NeoVim and supporting packages
      become: yes
      pacman:
        name:
          - ansible-lint
          - autopep8
          - neovim
          - nodejs
          - npm
          - yarn
          - powerline-fonts
          - python-pylint
          - python-pynvim
        state: latest
  when: ansible_distribution == 'Archlinux'

- name: Configure environment variables
  become: yes
  file:
    src: "{{ role_path }}/files/vim_profile.sh"
    dest: /etc/profile.d/vim_profile.sh
    state: link

- name: Create directories
  become: yes
  file:
    dest: "/usr/local/etc/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - ""
    - "vim-config"
    - "vim-config/common"
    - "vim-config/nvim"
    - "vim-config/vim"

- name: Copy configuration
  become: yes
  file:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "/usr/local/etc/vim-config/{{ item }}"
    state: link
  with_items:
    - common/init.vim
    - common/before_plugins.vim
    - common/plugins.vim
    - common/after_plugins.vim
    - nvim/plugins.vim
    - nvim/after_plugins.vim
    - vim/before_plugins.vim

- name: Install Vim init
  become: yes
  file:
    src: "{{ role_path }}/files/vimrc.local"
    dest: /etc/vimrc.local
    state: link

- name: Touch /etc/vimrc
  become: yes
  file:
    path: /etc/vimrc
    state: touch
    owner: root
    group: root
    mode: 0644

- name: Load Vim init
  become: yes
  blockinfile:
    dest: /etc/vimrc
    block: |
      if filereadable("/usr/local/etc/vim-config/common/vimrc.local")
        source /usr/local/etc/vim-config/common/vimrc.local
      endif

- name: Create NeoVim configuration directory
  become: yes
  file:
    dest: /etc/xdg/nvim
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Install NeoVim init
  become: yes
  file:
    src: "{{ role_path }}/files/vimrc.local"
    dest: /etc/xdg/nvim/sysinit.vim
    state: link

- name: Initialize NeoVim plugins (self)
  command: nvim -c PlugInstall -c q -c q

- name: Initialize NeoVim plugins (root)
  become: yes
  command: nvim -c PlugInstall -c q -c q

- name: Set directory permissions
  become: yes
  command: find /usr/local/etc/vim-config -type d -execdir chmod 0755 '{}' \;

- name: Symlink Vim to NeoVim
  become: yes
  file:
    src: /usr/bin/nvim
    dest: /usr/bin/vim
    state: link

- name: Symlink Vi to NeoVim
  become: yes
  file:
    src: /usr/bin/nvim
    dest: /usr/bin/vi
    state: link

  # Install in the user global - see the "npm config" command above
- name: Install pyright
  command: npm install -g pyright
